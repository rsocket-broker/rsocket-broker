plugins {
	id 'com.jfrog.artifactory' version '4.21.0' apply false
	id 'io.spring.dependency-management' version '1.1.0'
	id 'java'
    id 'maven-publish'
}

subprojects {
	apply plugin: 'java-library'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'maven-publish'
	apply plugin: 'com.jfrog.artifactory'
	apply plugin: 'signing'

	sourceCompatibility = '17'

	repositories {
	  if (version.endsWith('SNAPSHOT')) {
        mavenLocal()
		maven { url 'https://oss.jfrog.org/artifactory/oss-snapshot-local' }
		maven {
			url = uri("https://maven.pkg.github.com/rsocket-broker/rsocket-broker-client")
			credentials {
				username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
				password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
			}
		}
		maven { url 'https://repo.spring.io/snapshot' }
	  }
	  mavenCentral()
	  maven { url 'https://repo.spring.io/milestone' }
	}

	dependencyManagement {
		imports {
			mavenBom "io.projectreactor:reactor-bom:${reactorBomVersion}"
			mavenBom "org.junit:junit-bom:${junitJupiterVersion}"
			mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
			mavenBom "io.rsocket:rsocket-bom:${rsocketVersion}"
		}

		dependencies {
			dependency "io.rsocket.broker:rsocket-broker-client:${rsocketBrokerClientVersion}"
			dependency "io.rsocket.broker:rsocket-broker-client-spring:${rsocketBrokerClientVersion}"
			dependency "io.rsocket.broker:rsocket-broker-common:${rsocketBrokerClientVersion}"
			dependency "io.rsocket.broker:rsocket-broker-common-spring:${rsocketBrokerClientVersion}"
			dependency "io.rsocket.broker:rsocket-broker-frames:${rsocketBrokerClientVersion}"
			dependency "org.agrona:agrona:${agronaVersion}"
			dependency "org.assertj:assertj-core:${assertjVersion}"
			dependency "org.mockito:mockito-core:${mockitoVersion}"
			dependency "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
			dependency "org.roaringbitmap:RoaringBitmap:${roaringbitmapVersion}"
		}
	}
	java {
		withSourcesJar()
		withJavadocJar()
	}
	publishing {
		publications {
			mavenJava(MavenPublication) {
				from components.java
			}
		}
	}

	test {
		useJUnitPlatform()
	}

}

apply from: "${rootDir}/gradle/publications.gradle"

description = 'RSocket Broker'

wrapper {
	distributionType = Wrapper.DistributionType.ALL
}
