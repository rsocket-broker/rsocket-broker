plugins {
	id 'com.jfrog.artifactory' version '4.21.0' apply false
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

subprojects {
	apply plugin: 'java-library'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'maven-publish'
	apply plugin: 'com.jfrog.artifactory'
	apply plugin: 'signing'

	sourceCompatibility = '1.8'

	repositories {
	  if (version.endsWith('SNAPSHOT')) {
        mavenLocal()
		maven { url 'https://repo.spring.io/snapshot' }
		maven { url 'https://oss.jfrog.org/artifactory/oss-snapshot-local' }
		maven {
			url = uri("https://maven.pkg.github.com/rsocket-routing/rsocket-routing-client")
			credentials {
				username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
				password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
			}
		}
	  }
	  mavenCentral()
	  maven { url 'https://repo.spring.io/milestone' }
	}

	dependencyManagement {
		imports {
			mavenBom "io.projectreactor:reactor-bom:${reactorBomVersion}"
			mavenBom "org.junit:junit-bom:${junitJupiterVersion}"
			mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
			mavenBom "io.rsocket:rsocket-bom:${rsocketVersion}"
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}

		dependencies {
			dependency "io.rsocket.routing:rsocket-routing-client:${rsocketRoutingClientVersion}"
			dependency "io.rsocket.routing:rsocket-routing-common:${rsocketRoutingClientVersion}"
			dependency "io.rsocket.routing:rsocket-routing-common-spring:${rsocketRoutingClientVersion}"
			dependency "io.rsocket.routing:rsocket-routing-frames:${rsocketRoutingClientVersion}"
			dependency "org.agrona:agrona:${agronaVersion}"
			dependency "org.assertj:assertj-core:${assertjVersion}"
			dependency "org.mockito:mockito-core:${mockitoVersion}"
			dependency "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
			dependency "org.roaringbitmap:RoaringBitmap:${roaringbitmapVersion}"
			dependency "io.rsocket.routing:rsocket-routing-client-spring:${rsocketRoutingClientVersion}"
		}
	}

	plugins.withType(JavaLibraryPlugin) {
		task sourcesJar(type: Jar) {
			classifier 'sources'
			from sourceSets.main.allJava
		}

		task javadocJar(type: Jar, dependsOn: javadoc) {
			classifier 'javadoc'
			from javadoc.destinationDir
		}

		plugins.withType(MavenPublishPlugin) {
			publishing {
				publications {
					maven(MavenPublication) {
						from components.java
						artifact sourcesJar
						artifact javadocJar
					}
				}
			}
		}
	}

	test {
		useJUnitPlatform()
	}

}

apply from: "${rootDir}/gradle/publications.gradle"

description = 'RSocket Routing Broker'

wrapper {
	distributionType = Wrapper.DistributionType.ALL
}
